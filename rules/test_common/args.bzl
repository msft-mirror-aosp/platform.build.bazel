load("@bazel_skylib//lib:unittest.bzl", "analysistest", "asserts")

# TODO: Please extend me! Some functionality we will probably want:
#       - Support args with = (--bar=baz)
#       - Support multiple instances of the same args
def check_arg_value(env, actual_args, arg_name, validation_func):
    """
    Should be called from analysis tests to confirm the presence and value of a
    given argument. For example, given the command
    foo --bar baz
    this function can be used to confirm that the value of argument "--bar" is
    "baz".
    Args:
        env: The analysistest env object
        actual_args(List<String>): The list of arguments fetched from the action
                                   generated by the rule under test
        arg_name(String): The name of the argument being validated (in the case
                          of the example, "--bar")
        validation_func(Function): A function to preform validation of the arg
                                   value. Takes env, a string that will be
                                   passed the arg name, and a string that will
                                   be passed the actual value of the arg
    """
    found_arg = False
    for i in range(1, len(actual_args) - 1):
        if actual_args[i] == arg_name:
            validation_func(env, arg_name, actual_args[i + 1])
            found_arg = True
    asserts.true(
        env,
        found_arg,
        ("%s argument not found in command for target foo. Actual list: " +
         "%s") % (arg_name, actual_args),
    )
