From a74117984d6e03d5ba9ce7bdcb009d31ad312ecb Mon Sep 17 00:00:00 2001
From: Zach Yu <zachyu@google.com>
Date: Wed, 21 Aug 2024 11:41:29 -0700
Subject: [PATCH 1/1] Support generated files with sibling repo layout.

When using `experimental_sibling_repository_layout`, `file.path` won't contain a segment matching `workspace_root`, as the workspace name is encoded in the `root` path instead. In this change we first remove the root path prefix from each path. This allows patching the toolchain sysroot with rules like `copy_file()`, etc.
---
 rust/toolchain.bzl | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/rust/toolchain.bzl b/rust/toolchain.bzl
index 1ff73e6c..8203e6c9 100644
--- a/rust/toolchain.bzl
+++ b/rust/toolchain.bzl
@@ -326,12 +326,16 @@ def _symlink_sysroot_tree(ctx, name, target):
         # Parse the path to the file relative to the workspace root so a
         # symlink matching this path can be created within the sysroot.
 
+        file_path = file.path
+
+        # Removes file's root path to support derived files when sibling layout is enabled.
+        if file.root.path and file_path.startswith(file.root.path):
+            file_path = file_path[len(file.root.path):]
+
         # The code blow attempts to parse any workspace names out of the
         # path. For local targets, this code is a noop.
         if target.label.workspace_root:
-            file_path = file.path.split(target.label.workspace_root, 1)[-1]
-        else:
-            file_path = file.path
+            file_path = file_path.split(target.label.workspace_root, 1)[-1]
 
         symlink = ctx.actions.declare_file("{}/{}".format(name, file_path.lstrip("/")))
 
-- 
2.46.0.windows.1

