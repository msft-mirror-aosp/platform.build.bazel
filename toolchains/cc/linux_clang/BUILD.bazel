load(
    "@//build/bazel/toolchains/cc:rules.bzl",
    "cc_toolchain_config",
    "cc_toolchain_dynamic_runtime",
    "cc_toolchain_static_runtime",
)
load(":features.bzl", "cc_features")

package(default_visibility = ["//visibility:public"])

_x64_imports = [
    "@clang_linux_x64//:libcxx",
] + select({
    ":host_stdlibs": [],
    "//conditions:default": [
        "@gcc_lib//:start_libs",
        "@gcc_lib//:libs",
    ],
})

config_setting(
    name = "host_stdlibs",
    values = {"features": "-no_implicit_libs"},
)

cc_features(
    name = "x64_features",
    b_prefix = select({
        ":host_stdlibs": None,
        "//conditions:default": "@gcc_lib//:lib/gcc/x86_64-linux/4.8.3",
    }),
    compile_flags = [
        "-m64",
        "-no-canonical-prefixes",
        "-Wno-builtin-macro-redefined",
        "-D__DATE__=\"redacted\"",
        "-D__TIMESTAMP__=\"redacted\"",
        "-D__TIME__=\"redacted\"",
    ],
    cxx_flags = [
        "-std=c++17",
        "-nostdinc++",
    ],
    link_flags = [
        "-fuse-ld=lld",
        "-Wno-unused-command-line-argument",
        "-Wl,--as-needed",
        "-lm",
        "-ldl",
        "-Wl,--no-as-needed",
    ],
    toolchain_imports = _x64_imports,
)

cc_toolchain_config(
    name = "x64_config",
    cc_features = ":x64_features",
    cc_tools = [
        "@clang_linux_x64//:clang",
        "@clang_linux_x64//:archiver",
        "@clang_linux_x64//:strip",
    ],
    compiler_name = "clang",
    identifier = "linux_clang_x64",
    legacy_builtin_include_directories = select({
        ":host_stdlibs": [
            "/usr/include",
            "/usr/include/x86_64-linux-gnu",
        ],
        "//conditions:default": [],
    }),
    sysroot = select({
        ":host_stdlibs": None,
        "//conditions:default": "@gcc_lib//:sysroot",
    }),
    target_cpu = "k8",
    toolchain_imports = _x64_imports,
)

cc_toolchain_dynamic_runtime(
    name = "x64_dynamic_runtime",
    libs = _x64_imports,
)

cc_toolchain_static_runtime(
    name = "x64_static_runtime",
    libs = _x64_imports,
)

cc_toolchain(
    name = "x64",
    all_files = ":x64_config",
    ar_files = "@clang_linux_x64//:archiver",
    as_files = "@clang_linux_x64//:clang",
    compiler_files = ":x64_config",
    dwp_files = "@//build/bazel/toolchains/cc:empty",
    dynamic_runtime_lib = ":x64_dynamic_runtime",
    linker_files = ":x64_config",
    objcopy_files = "@//build/bazel/toolchains/cc:empty",
    static_runtime_lib = ":x64_static_runtime",
    strip_files = "@clang_linux_x64//:strip",
    supports_param_files = 1,
    toolchain_config = ":x64_config",
)

toolchain(
    name = "x64_toolchain",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "@bazel_tools//tools/cpp:clang",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    toolchain = ":x64",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)
